name: Web3ExplorerWs CD
on:
    push:
        tags:
            - v*
env:
    node-version: 20.11.1

permissions:
  contents: write  # Grant write access to contents for release creation

jobs:
  release:
    name: Release pushed tag
    runs-on: ubuntu-22.04
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          if gh release view "$tag" --repo="$GITHUB_REPOSITORY" &> /dev/null; then
            echo "Release $tag already exists."
          else
            gh release create "$tag" \
                --repo="$GITHUB_REPOSITORY" \
                --title="${tag#v}" \
                --generate-notes
            echo "Release $tag created."
          fi
  desktop-build:
    name: desktop-build
    needs: release
    strategy:
      matrix:
        include:
          - os: windows-latest
            command: make:intel
            tag: x64
            dist: /apps/desktop/out/make/squirrel.windows/x64/*Setup.exe

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      RELEASE_URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
      APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
      REACT_APP_AMPLITUDE: ${{ secrets.REACT_APP_AMPLITUDE }}
      REACT_APP_TG_BOT_ID: ${{ secrets.REACT_APP_TG_BOT_ID }}
      REACT_APP_TONCONSOLE_API: https://pro.tonconsole.com
      REACT_APP_TG_BOT_ORIGIN: https://tonkeeper.com
      REACT_APP_APTABASE: ${{ secrets.VITE_APP_APTABASE }}
      REACT_APP_APTABASE_HOST: https://anonymous-analytics.tonkeeper.com
      REACT_APP_STONFI_REFERRAL_ADDRESS: ${{ secrets.REACT_APP_STONFI_REFERRAL_ADDRESS }}
      DEBUG: electron*
    steps:
      - name: Print Release Upload_url
        run: |
          echo "Release Upload URL: ${{ env.RELEASE_URL }}"

      - name: Checkout to git repository
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Enable Corepack
        run: |
          corepack enable
      - name: Decode service account into a file
        if: runner.os == 'macOS'
        env:
          CREDENTIALS: ${{ secrets.APPLE_API_KEY }}
        run: |
          echo $CREDENTIALS | base64 -d > ${{ github.workspace }}/AuthKey.p8
      - name: Configure keychain
        if: runner.os == 'macOS'
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IDENTITY_P12_B64 }}
          p12-password: ${{ secrets.IDENTITY_PASSPHRASE }}

      - name: Run install
        uses: borales/actions-yarn@v5
        with:
          cmd: install
      - name: Run build intel distributive
        uses: borales/actions-yarn@v5
        with:
          cmd: ${{ matrix.command }}
          dir: 'apps/desktop'
      - name: debug
        run: |
          tree ${{ github.workspace }}/apps/desktop/out/make/

#      - name: Upload Release Assets
#        if: matrix.tag == 'x64' && runner.os == 'ubuntu-latest'
#        run: |
#          ASSET_PATH="apps/desktop/out/make/zip/Web3ExplorerWs-linux-x64-3.23.0.zip"  # Adjust path as necessary
#          ASSET_NAME="Web3ExplorerWs-linux-x64-3.23.0.zip"  # Adjust name as necessary
#
#          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#          -H "Content-Type: application/octet-stream" \
#          --data-binary @"${ASSET_PATH}" \
#          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=${ASSET_NAME}"


#
#      - name: Upload zip distributives to artifacts
#        uses: actions/upload-artifact@v4
#        if: runner.os == 'Windows'
#        with:
#          name: Web3 Explorer Ws Desktop ${{ runner.os }} x64 archive
#          retention-days: 10
#          path: |
#            ${{ github.workspace }}/apps/desktop/out/make/zip/**/*.zip
#
#      - name: Upload distributives to artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: Web3 Explorer Desktop ${{ runner.os }} ${{ matrix.tag }}
#          retention-days: 10
#          path: |
#            ${{ github.workspace }}${{ matrix.dist }}
#
#      - name: Clean-up credentials
#        if: always() && runner.os == 'macOS'
#        run: |
#          rm ${{ github.workspace }}/AuthKey.p8

